{"__v":5,"_id":"nuby_express:objects","author":"bingomanatee","content":"There are many cases where javascript Objects are required as a parameter; its good to understand the bestiary of types in Javascript; especially as many of them share qualities with the other ones that make identification confusing. \n\n## Raw Objects\n\nAn Object in JavaScript is a hash of name-value associations. Objects can be created \"raw\" in one of two ways: \n\n``` javaScript\nvar foo = {name: 'foo', codes: [112, 154, 324]}\nvar bar = new Object();\nbar.name = 'bar';\nvar codes = [456,226,464];\n```\n\n## Constructed Objects / Instances\n\nObjects can also be __instances__ spawned from a constructor function. \n\n``` javascript\n\n\n    function Widget(name, codes) {\n        this.name = name;\n        this.codes = codes\n    }\n\n    this.vey = new Widget('vey', [7, 8, 9]);\n```\n\nNote - the `new` keyword is critical here. it does two important things:\n\n1. Creates a new object, which is returned to the left-hand target\n2. associates the keyword `this` inside the constructor body with the object to be returned.\n\nWithout the use of the keyword, nothing is returned; meaning, the function, like all normal functions, returns nothing without the use of the keyword `return` in the function (which is not normal for constructors). Worse yet, `this` in the constructor will be mapped to the window object as demonstrated by this jsfiddle: \n\n<iframe style=\"width: 100%; height: 300px\" src=\"http://jsfiddle.net/bingomanatee/wUcMX/5/embedded/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n## JSON\n\n__JSON__ stands for __JavaScript Object Notation__. It is designed to create a textual, human readable way to transport complex structures, much like XML or YAML. \n\nUnlike true JavaScript objects, there are strict limitations on the type of data that JSON can transport. JSON objects can contain the following: \n\n1. Strings\n2. Numbers (integers and floats)\n3. Arrays of JSON, arrays, Strings, and Numbers\n4. JSON \n\nString contents' quote (&quot;) must be escaped with a slash(\\) to avoid a syntax error. \n\n``` JSON\n\n{\n  \"a_string\": \"foo\",\n  \"a_number: 7.00,\n  \"a_array: [{\"vey\", 9.00}, [1,2,3], \"bar\", 8.00},\n  \"a_json\": {\"name\": \"sue\"}\n}\n\n```\n\nObjects on the other hand have a broder manifest of property values including __functions__ and __Dates__. \n\n## JSON Serialization and Deserialization\n\nThere is a JSON object in Node.js. and most clients* have a global object named JSON that has two methods: `JSON.stringify(object)` and `JSON.parse(str)`. These methods translate a raw JSON string into a JavaScript object and vice versa. \n\n-----------------\n<small>* Firefox 3.5, Internet Explorer 8.0 and Chrome 3 and later browsers</small>","creator":"bingomanatee","name":"objects","scope":"nuby_express","summary":"Objects - as distinct from Functions, Classes and Class Instances, JSON, and Arrays","title":"Objects","write_date":"2012-10-26T16:35:43.081Z","scope_root":false,"deleted":false}