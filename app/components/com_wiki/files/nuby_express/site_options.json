{"__v":11,"_id":"nuby_express:site_options","author":"bingomanatee","content":"Site Options are a member of the [[admin_component:Administration (Admin) component]] and form the basis for a \"Preferences/Settings\" system in Nuby Express. They are distinct from [[action_config:Action configurations]] in that they are admin-editable and have values stored in a repository, unlike configurations whose values are hard-coded in configuration [[objects:JSON]]. \n\nThe type of things that make good candidates for the __option__ collection are:\n\n* Site name\n* Database passwords\n* Footer text blocks\n\nThe scope of a site option is sitewide, so take care to use unique and distinctive names for site options; preferably prefixing them with the name of the [[components:Component]] in which they are defined. \n\n## Accessing and changing Options\n\nOptions can be accessed in code via the __site_option__ collection. That collection has several useful custom methods:\n\n<dl>\n<dt>get_option(str|array)</dt>\n<dd>When passed a string, returns the value associated with the passed key. When passed an array(of strings), returns an  [[objects]] containing the key/values of each option that can be found.</dd>\n<dd>get_cache()</dd>\n<dt>The `site_options` collection has an internal cash of key/value pairs. It is initialized at startup with a hash of all stored values. This method retuns (a clone of) EVERY site option as a key-value store. </dd>\n<dt>reload_cache(cb)<dt>\n<dd>Any time you change a site option in code, you must call this method to reset the internal site_option cache in memory. The (optional) callback will be passed a copy of the updated cache.\n</dd>\n</dl>\n\n## Defining Options in configuration files\n\nOptions are derived from configuration file settings. Here is an example of options' definition, in a module that deals with Facebook: \n\n``` json\n\n{\n\n    \"options\":[\n        {\n            \"name\":\"facebook_app_id\",\n            \"data_type\":\"string\",\n            \"default\":\"\",\n            \"notes\":\"the app id given in your Facebook app configuration page. \"\n        },\n        {\n            \"name\":\"facebook_app_secret\",\n            \"data_type\":\"string\",\n            \"default\":\"\",\n            \"notes\":\"the app secret given in your Facebook app configuration page.\"\n        },\n        {\n            \"name\":\"facebook_app_domain\",\n            \"data_type\":\"string\",\n            \"default\":\"\",\n            \"notes\":\"the app domain given in your Facebook app configuration page.\"\n        }\n    ]\n}\n\n```\n\nAs show, the important fields in option definitions are name, data_type, and default - the value that the site option will be initialized to. There are currently no implications for data_type in Nuby_Express.","creator":"bingomanatee","name":"site_options","scope":"nuby_express","summary":"Site Options","title":"Site Options","write_date":"2012-10-26T18:05:40.031Z","scope_root":false,"deleted":false}